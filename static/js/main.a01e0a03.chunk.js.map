{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortBy","goodsFromServer","App","state","started","goods","sortBy","default","reverse","sortByName","setState","name","sortByLength","length","reset","this","sortedGoods","sort","g1","g2","localeCompare","className","map","good","type","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAgBYA,E,kFAbNC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGUD,K,WAAAA,E,YAAAA,E,iBAAAA,M,SAaNE,E,4MACJC,MAAe,CACbC,SAAS,EACTC,MAAM,GAAD,OAAMJ,GACXK,OAAQN,EAAOO,QACfC,SAAS,G,EAGXC,WAAa,WACX,EAAKC,SAAS,CACZJ,OAAQN,EAAOW,Q,EAInBC,aAAe,WACb,EAAKF,SAAS,CACZJ,OAAQN,EAAOa,U,EAInBL,QAAU,WACR,EAAKE,UAAS,SAAAP,GAAK,MAAK,CACtBK,SAAUL,EAAMK,a,EAIpBM,MAAQ,WACN,EAAKJ,SAAS,CAAEL,MAAM,GAAD,OAAMJ,GAAkBK,OAAQN,EAAOO,W,4CAG9D,WAAU,IAAD,OACP,EAAmCQ,KAAKZ,MAAhCE,EAAR,EAAQA,MAAOC,EAAf,EAAeA,OAAQE,EAAvB,EAAuBA,QAEjBQ,EAAc,YAAIX,GAAOY,MAAK,SAACC,EAAIC,GACvC,OAAQb,GACN,IAAK,OACH,OAAOY,EAAGE,cAAcD,GAC1B,IAAK,SACH,OAAOD,EAAGL,OAASM,EAAGN,OACxB,QACE,OAAO,MAQb,OAJIL,GACFQ,EAAYR,UAIZ,qBAAKa,UAAU,MAAf,SACGN,KAAKZ,MAAMC,QAER,sBAAKiB,UAAU,UAAf,UACE,oBAAIA,UAAU,oBAAd,mBACA,6BACGL,EAAYM,KAAI,SAAAC,GAAI,OACnB,6BAAKA,SAGT,sBAAKF,UAAU,iCAAf,UACE,wBACEG,KAAK,SACLH,UAAU,wCACVI,QAASV,KAAKN,WAHhB,iCAQA,wBACEe,KAAK,SACLH,UAAU,wCACVI,QAASV,KAAKH,aAHhB,+BAQF,sBAAKS,UAAU,iCAAf,UACE,wBACEG,KAAK,SACLH,UAAU,wCACVI,QAASV,KAAKP,QAHhB,qBAQA,wBACEgB,KAAK,SACLH,UAAU,wCACVI,QAASV,KAAKD,MAHhB,yBAWJ,wBACEU,KAAK,SACLH,UAAU,8CACVI,QAAS,kBAAM,EAAKf,SAAS,CAAEN,SAAS,KAH1C,yB,GAhGMsB,IAAMC,WA6GTzB,ICvIf0B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a01e0a03.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport enum SortBy {\n  default = '',\n  name = 'name',\n  length = 'length',\n}\n\ntype State = {\n  started: boolean,\n  goods: string[],\n  sortBy: SortBy,\n  reverse: boolean,\n};\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    started: false,\n    goods: [...goodsFromServer],\n    sortBy: SortBy.default,\n    reverse: false,\n  };\n\n  sortByName = () => {\n    this.setState({\n      sortBy: SortBy.name,\n    });\n  };\n\n  sortByLength = () => {\n    this.setState({\n      sortBy: SortBy.length,\n    });\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      reverse: !state.reverse,\n    }));\n  };\n\n  reset = () => {\n    this.setState({ goods: [...goodsFromServer], sortBy: SortBy.default });\n  };\n\n  render() {\n    const { goods, sortBy, reverse } = this.state;\n\n    const sortedGoods = [...goods].sort((g1, g2) => {\n      switch (sortBy) {\n        case 'name':\n          return g1.localeCompare(g2);\n        case 'length':\n          return g1.length - g2.length;\n        default:\n          return 0;\n      }\n    });\n\n    if (reverse) {\n      sortedGoods.reverse();\n    }\n\n    return (\n      <div className=\"App\">\n        {this.state.started\n          ? (\n            <div className=\"content\">\n              <h1 className=\"has-text-centered\">Goods</h1>\n              <ul>\n                {sortedGoods.map(good => (\n                  <li>{good}</li>\n                ))}\n              </ul>\n              <div className=\"buttons has-addons is-centered\">\n                <button\n                  type=\"button\"\n                  className=\"button is-rounded is-outlined is-info\"\n                  onClick={this.sortByName}\n                >\n                  Sort alphabetically\n                </button>\n\n                <button\n                  type=\"button\"\n                  className=\"button is-rounded is-outlined is-info\"\n                  onClick={this.sortByLength}\n                >\n                  Sort by length\n                </button>\n              </div>\n              <div className=\"buttons has-addons is-centered\">\n                <button\n                  type=\"button\"\n                  className=\"button is-rounded is-outlined is-info\"\n                  onClick={this.reverse}\n                >\n                  Reverse\n                </button>\n\n                <button\n                  type=\"button\"\n                  className=\"button is-rounded is-outlined is-info\"\n                  onClick={this.reset}\n                >\n                  Reset\n                </button>\n              </div>\n            </div>\n          )\n          : (\n            <button\n              type=\"button\"\n              className=\"button is-rounded is-outlined is-info start\"\n              onClick={() => this.setState({ started: true })}\n            >\n              Start\n            </button>\n          )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}